public void collapse(Stack<Integer> stack)
    {
      Queue<Integer> reverse = new Queue<Integer>(stack.size());
      for(int i = 0; i < stack.size(); i++)
      {
         reverse.enqueue(stack.pop());
      }
      if(stack.size()%2==1)
      {
         stack.push(reverse.dequeue());
         for(int i = 1; i < reverse.size()-1; i++)
         {
            stack.push(reverse.dequeue()+reverse.dequeue());
         }
      }
      else
      {
         for(int i = 0; i < reverse.size()-1; i++)
         {
            stack.push(reverse.dequeue()+reverse.dequeue());
         }
      }
    }
